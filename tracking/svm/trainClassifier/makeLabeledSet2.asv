function makeLabeledSet2(className, labeledDataFile, vidFile)

% !!! need to document


% settings
dataDir = 'C:\Users\rick\Google Drive\columbia\obstacleData\svm\trainingImages\';
subFrameSize = [40 40]; % y,x
negEgsPerEg = 5;


% initializations
load(labeledDataFile, 'locations', 'locationFrameInds');
nanInds = isnan(locationFrameInds);
locations = locations(:,~nanInds,:);
locationFrameInds = locationFrameInds(~nanInds); % !!! sorting these chhronologically will likely make getting vid frames faster
centPad = floor(subFrameSize / 2); % y,x

egsPerFrame = size(locations,3);
imNumbers = 1:length(locations);
negImNumbers = (imNumbers(1)-1)*negEgsPerEg+1:imNumbers(end)*negEgsPerEg; % indices of negative examples
imNumberInd = 1;
negImNumberInd = 1;

% load video and sample frame
vid = VideoReader(vidFile);
% bg = getBgImage(vid, 1000, false);


% iterate through all example frame
for i = imNumbers
    disp(i)
    
    % get frame
    frame = rgb2gray(read(vid, locationFrameInds(i)));
%     frame = frame - bg;
        
    % create mask of locations of positive examples
    egsMask = zeros(size(frame,1), size(frame,2));

    for j=1:egsPerFrame
        xy = locations(1:2, i, j);
        egsMask(xy(2)-centPad(1):xy(2)+centPad(1), xy(1)-centPad(2):xy(1)+centPad(2)) = 1;
    end


    % save positive and create negative examples
    for j=1:egsPerFrame

        imgInds = {xy(2)-centPad(1):xy(2)+centPad(1), xy(1)-centPad(2):xy(1)+centPad(2)};
        
        if ~any(imgInds{1}<1) 
            img = frame(imgInds{1}, imgInds{1});
            save([dataDir className '\positive\img' num2str(imNumbers(imNumberInd)) '.mat'], 'img');
            imNumberInd = imNumberInd+1;

            % create/save negative examples for every positive example
            for k=1:negEgsPerEg

                % find a frame that doesn't overlap with positive examples
                acceptableImage = false;

                while ~acceptableImage 

                    pos = [randi([centPad(1)+1 size(frame,1)-centPad(1)-1])...
                           randi([centPad(2)+1 size(frame,2)-centPad(2)-1])]; % y,x
                    temp = egsMask(pos(1)-centPad(1):pos(1)+centPad(1), pos(2)-centPad(2):pos(2)+centPad(2));
                    pixelsOverlap = sum(temp(:));
                    img = frame(pos(1)-centPad(1):pos(1)-centPad(1), pos(2)-centPad(2):pos(2)-centPad(2));
                    if pixelsOverlap==0 && mean(img(:))>5
                        acceptableImage = true;
                    end
                end

                % save negative example
                save([dataDir className '\negative\img' num2str(negImNumbers(negImNumberInd)) '.mat'], 'img');
                negImNumberInd = negImNumberInd+1;
            end
            
        % if positive eg does not fit within frame
        else
            
        end
    end
end










