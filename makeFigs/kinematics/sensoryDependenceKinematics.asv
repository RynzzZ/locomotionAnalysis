% function sensoryDependenceKinematics

% wiskSessions = {'171117_001', '171118_001', '180225_000', '180225_001', '180225_002', '180226_000', '180226_001', '180226_002'};
% noWiskSessions = {'171121_000', '171122_001', '180228_000', '180228_001', '180228_002', '180301_000', '180301_001', '180301_002'};

wiskLightBins = ismember({data.session}, wiskSessions) & [data.isLightOn];
wiskBins = ismember({data.session}, wiskSessions) & ~[data.isLightOn];
lightBins = ismember({data.session}, noWiskSessions) & [data.isLightOn];
neitherBins = ismember({data.session}, noWiskSessions) & ~[data.isLightOn];
allBins = find(wiskLightBins | wiskBins | lightBins | neitherBins);
allInds = find(allBins);
conditionBins = {wiskLightBins, wiskBins, lightBins, neitherBins};



% settings
azimuth = -10;
elevation = 10;
obsThickness = .003;
obsHeight = .009;
colors = [hsv(4)];
controlColor = repmat(0, 1, 3);

% kinematic plot settings
xLims = [-.1 .04];
yLims = [-0.0381 0.0381]; % 3 inches, which is width of wheel
zLims = [0 .015];
lineWid = 3;

locationSmps = size(data(1).modifiedLocationsInterp{1},3);
locationsMod = nan(length(allInds), 3, locationSmps);
locationsControl = nan(length(allInds), 3, locationSmps);

for i = 1:length(allInds)
    disp(i)
    
    % find fore paw that is first to get over osbtacle
    isStepping = ~isnan(data(1).modifiedStepIdentities(:,:));
    lastModStepInds = table2array(rowfun(@(x)(find(x,1,'last')), table(isStepping')));
    [~, firstPawOverInd] = min(lastModStepInds .* [nan 1 1 nan]'); % mask out hind paws, inds 1 and 4
    
    locationsMod(i,:,:) = squeeze(data(allInds(i)).modifiedLocationsInterp{firstPawOverInd}(end,:,:));
    locationsControl = data(allInds(i)).controlLocationsInterp{firstPawOverInd}(end,:,:);
end

for i = 1:length(conditionBins)
    
    xs = squeeze(locationsMod(conditionBins{i},1,:));
    ys = squeeze(locationsMod(conditionBins{i},2,:));
    zs = squeeze(locationsMod(conditionBins{i},3,:));
    
    plot3(mean(xs,1), mean(ys,1), mean(zs,1))
    
end

daspect([1 1 1]



